#!/usr/bin/env bash
set -e -o pipefail

LOG_DIR="/var/log/terraform-provisioning"
LOG_FILE="$LOG_DIR/waiting.log"

# Create a log directory and make it owned by the SSH user
sudo mkdir -p "$LOG_DIR"
sudo chown $(whoami):$(whoami) "$LOG_DIR"
touch "$LOG_FILE"

# Redirect all stdout/stderr into the log (and the console)
exec &> >(tee -a "$LOG_FILE")

echo "=== Terraform Remote-Exec Bootstrap ==="
echo "Run started at: $(date)"

# Wait for cloud-init
echo "Checking cloud-init status..."
if timeout 300 bash -c 'until sudo test -f /var/lib/cloud/instance/boot-finished; do echo "Waiting for cloud-init..."; sleep 10; done'; then
  echo "✓ cloud-init finished!"
else
  echo "ERROR: cloud-init did not complete within 5 minutes"
  exit 1
fi

# Wait for containerd
echo "Checking containerd service..."
if timeout 300 bash -c 'while ! sudo systemctl is-active containerd >/dev/null 2>&1; do echo "Waiting for containerd service..."; sleep 10; done'; then
  echo "✓ containerd service is active!"
else
  echo "ERROR: containerd service not ready within 5 minutes"
  sudo systemctl status containerd || true
  exit 1
fi

# Wait for kubelet
echo "Checking kubelet service..."
if timeout 300 bash -c 'while ! sudo systemctl is-active kubelet >/dev/null 2>&1; do echo "Waiting for kubelet service..."; sleep 10; done'; then
  echo "✓ kubelet service is active!"
else
  echo "ERROR: kubelet service not ready within 5 minutes"
  sudo systemctl status kubelet || true
  exit 1
fi

# Wait for kubeadm binary
echo "Checking kubeadm binary..."
if timeout 300 bash -c 'until sudo test -f /usr/bin/kubeadm; do echo "Waiting for kubeadm binary..."; sleep 5; done'; then
  echo "✓ kubeadm binary is available!"
else
  echo "ERROR: kubeadm binary not found within 5 minutes"
  echo "Installed Kubernetes packages:"
  dpkg -l | grep -E "(kubeadm|kubelet|kubectl)" || echo "No Kubernetes packages found"
  exit 1
fi

# Final verification
echo "Verifying kubeadm functionality..."
if sudo kubeadm version; then
  echo "✓ kubeadm is working correctly!"
else
  echo "ERROR: kubeadm version check failed"
  exit 1
fi

echo "=== All prerequisites ready! ==="
echo "Completed at: $(date)"

