# Entropy Engines - AWS Configuration Example
# Copy this file to terraform.tfvars and customize for your AWS deployment

# Core Configuration
cluster_name   = "agentic-platform"
environment    = "dev"

# AWS Configuration
aws_region          = "us-east-1"
availability_zones   = ["us-east-1a", "us-east-1b", "us-east-1c"]

# SSH Configuration (REQUIRED)
ssh_key_name = "your-ssh-key-name"

# Security Configuration (REQUIRED)
# Replace with your actual CIDR blocks - use your current IP for SSH access
ssh_allowed_cidrs    = ["0.0.0.0/0"]  # Restrict this to your IP ranges
bastion_allowed_cidrs = ["0.0.0.0/0"]  # Your office/home IP - restrict this

# Network Configuration
vpc_cidr = "10.0.0.0/16"
kubernetes_cidrs = {
  pod_cidr     = "10.244.0.0/16"
  service_cidr = "10.96.0.0/12"
}

# Subnet Configuration
public_subnet_count  = 2
private_subnet_count = 3

# Node Configuration
control_plane_count       = 3
control_plane_instance_type = "t3.medium"

cpu_worker_count         = 2
cpu_worker_instance_type = "m7g.large"

gpu_worker_count         = 1
gpu_worker_instance_type = "g5g.xlarge"

# Security Features
enable_volume_encryption = true
kms_key_id              = null  # Use AWS managed key

# Cost Optimization
nat_type           = "gateway"
single_nat_gateway = true  # Set to false for production HA

# Feature Flags
enable_nats_messaging = true
enable_gpu_nodes      = true
enable_vpc_endpoints  = true
enable_bastion_host   = true

# Instance Configuration
instance_ami_architecture = "arm64"  # Use "x86_64" for Intel/AMD
ubuntu_version           = "22.04"
bastion_instance_type    = "t3.micro"

# AWS Tags (optional)
tags = {
  Project     = "entropy-engines"
  Environment = "dev"
  Owner       = "your-team"
}